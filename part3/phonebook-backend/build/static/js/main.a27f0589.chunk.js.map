{"version":3,"sources":["components/PersonForm.js","components/Entry.js","services/phonebook.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","addNameNumber","newName","handleNewPerson","newNumber","handleNewNumber","onSubmit","value","onChange","type","Entry","person","deleteEntry","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","delete","Notification","message","isFailure","messageClass","className","App","useState","persons","setPersons","setNewName","setNewNumber","newSearch","setNewSearch","setMessage","isError","setIsError","useEffect","phoneService","directory","catch","console","log","filterPersons","filter","p","toLowerCase","includes","event","target","preventDefault","findIndex","newPerson","concat","setTimeout","map","key","entry","find","f","window","confirm","returned","deleteEntryOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a27f0589.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = ({addNameNumber, newName, handleNewPerson, newNumber, handleNewNumber}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t  <form onSubmit={addNameNumber}>\r\n\t\t  <div>\r\n\t\t    Name: <input value={newName} onChange={handleNewPerson} />\r\n\t\t  </div>\r\n\t\t  <div>\r\n\t\t    Number: <input value={newNumber} onChange={handleNewNumber} />\r\n\t\t  </div>\r\n\t\t  <div>\r\n\t\t    <button type='submit' > Add </button>\r\n\t\t  </div>\r\n\t\t  </form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PersonForm","import React from 'react';\r\n\r\nconst Entry = ({ person, deleteEntry }) => {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t  {person.name} {person.number}\r\n\t\t  <button onClick={deleteEntry}> Delete </button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Entry","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteOne = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\nexport default {getAll, create, update, deleteOne}","import React from 'react'\r\n\r\nconst Notification = ({ message, isFailure }) => {\r\n    if(message === null) {\r\n        return null\r\n    }\r\n\r\n    let messageClass = isFailure ? \"error\" : \"success\"\r\n\r\n    return (\r\n        <div className={messageClass}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, {useState, useEffect} from 'react'\r\nimport PersonForm from './components/PersonForm'\r\nimport Entry from './components/Entry'\r\nimport phoneService from './services/phonebook'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n\tconst [persons, setPersons] = useState([])\r\n\tconst [newName, setNewName] = useState('')\r\n\tconst [newNumber, setNewNumber] = useState('')\r\n\tconst [newSearch, setNewSearch] = useState('')\r\n\tconst [message, setMessage] = useState(null)\r\n\tconst [isError, setIsError] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tphoneService.getAll()\r\n\t\t\t\t.then(directory => {\r\n\t\t\t\t\tsetPersons(directory)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => console.log('Rejected during getAll'))\r\n\t}, [])\r\n\r\n\tconst addNameNumber = (event) => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst pos = persons.findIndex(p => p.name === newName)\r\n\t\tif(pos === -1) {\r\n\t\t\tconst newObject = {\r\n\t\t\t\tname: newName,\r\n\t\t\t\tnumber: newNumber\r\n\t\t\t}\r\n\t\t\tphoneService.create(newObject)\r\n\t\t\t\t\t\t.then(newPerson => {\r\n\t\t\t\t\t\t\tsetPersons(persons.concat(newPerson))\r\n\t\t\t\t\t\t\tsetNewName('')\r\n\t\t\t\t\t\t\tsetNewNumber('')\r\n\t\t\t\t\t\t\tsetIsError(false)\r\n\t\t\t\t\t\t\tsetMessage(`Added ${newName}`)\r\n\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\tsetMessage(null)\r\n\t\t\t\t\t\t\t}, 3000)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(() => console.log('Rejected during create'))\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// if(window.confirm(`${newName} is already added to Phonebook. Replace the old number with a new one?`)) {\r\n\t\t\t// \tconst person = persons.find(p => p.name === newName)\r\n\t\t\t// \tconst changedPerson = {...person, phone: newNumber}\r\n\t\t\t// \tconst newId = person.id\r\n\t\t\t// \tphoneService.update(newId, changedPerson)\r\n\t\t\t// \t\t\t\t.then(returned => {\r\n\t\t\t// \t\t\t\t\tsetPersons(persons.map(p => \r\n\t\t\t// \t\t\t\t\t\tp.id === newId ? returned : p))\r\n\t\t\t// \t\t\t\t\tsetNewName('')\r\n\t\t\t// \t\t\t\t\tsetNewNumber('')\r\n\t\t\t// \t\t\t\t\tsetIsError(false)\r\n\t\t\t// \t\t\t\t\tsetMessage(`Updated ${person.name}`)\r\n\t\t\t// \t\t\t\t\tsetTimeout(() => {\r\n\t\t\t// \t\t\t\t\t\tsetMessage(null)\r\n\t\t\t// \t\t\t\t\t}, 3000)\r\n\t\t\t// \t\t\t\t})\r\n\t\t\t// \t\t\t\t.catch(() => {\r\n\t\t\t// \t\t\t\t\tconsole.log('Rejected during udpate')\r\n\t\t\t// \t\t\t\t\tsetIsError(true)\r\n\t\t\t// \t\t\t\t\tsetMessage(\r\n\t\t\t// \t\t\t\t\t\t`Information of ${person.name} has already been removed from server`\r\n\t\t\t// \t\t\t\t\t)\r\n\t\t\t// \t\t\t\t\tsetTimeout(() => {\r\n\t\t\t// \t\t\t\t\t\tsetMessage(null)\r\n\t\t\t// \t\t\t\t\t}, 3000)\r\n\t\t\t// \t\t\t\t})\r\n\t\t\t// }\r\n\t\t\tsetIsError(true)\r\n\t\t\tsetMessage(`${newName} is already added to Phonebook`)\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetMessage(null)\r\n\t\t\t}, 3000)\r\n\t\t\tsetNewName('')\r\n\t\t\tsetNewNumber('')\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst handleNewPerson = (event) => {\r\n\t\tsetNewName(event.target.value)\r\n\t}\r\n\r\n\tconst handleNewNumber = (event) => {\r\n\t\tsetNewNumber(event.target.value)\r\n\t}\r\n\r\n\tconst handleNewSearch = (event) => {\r\n\t\tsetNewSearch(event.target.value)\r\n\t}\r\n\r\n\tconst deleteEntryOf = id => {\r\n\t\tconst entry = persons.find(f => f.id === id)\r\n\t\tif(window.confirm(`Delete ${entry.name}?`)) {\r\n\t\t\tphoneService.deleteOne(id)\r\n\t\t\t.then(returned => {\r\n\t\t\t\tconsole.log(`Delete request issued`)\r\n\t\t\t\tsetPersons(persons.filter(p => p.id !== id))\r\n\t\t\t\tsetIsError(true)\r\n\t\t\t\tsetMessage(`${entry.name} deleted`)\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetMessage(null)\r\n\t\t\t\t}, 3000)\r\n\t\t\t})\r\n\t\t\t.catch(() => {\r\n\t\t\t\tconsole.log('Rejected during delete')\r\n\t\t\t\tsetIsError(true)\r\n\t\t\t\tsetMessage(`Information of ${entry.name} has already been deleted from server`)\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetMessage(null)\r\n\t\t\t\t}, 3000)\r\n\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tconst filterPersons = persons.filter(p => p.name.toLowerCase().includes(newSearch.toLowerCase()))\r\n\r\n\tconst showEntry = () => filterPersons.map(p => \r\n\t\t\t<Entry key={p.id}\r\n\t\t\t\tperson={p}\r\n\t\t\t\tdeleteEntry={() => deleteEntryOf(p.id)}\r\n\t\t\t/>\r\n\t\t)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1> Working with Phonebook </h1>\r\n\r\n\t\t\t<Notification message={message} isFailure={isError}/>\r\n\r\n\t\t\t<div>\r\n\t\t\t\tFilter shown with: <input value={newSearch} onChange={handleNewSearch} />\r\n\t\t\t</div>\r\n\t\t\t<h2>Add to Phonebook </h2> \r\n\r\n\t\t\t<PersonForm addNameNumber={addNameNumber}\r\n\t\t\t\t\t\tnewName={newName}\r\n\t\t\t\t\t\thandleNewPerson={handleNewPerson}\r\n\t\t\t\t\t\tnewNumber={newNumber}\r\n\t\t\t\t\t\thandleNewNumber={handleNewNumber} />\r\n\r\n\t\t\t<h3>Numbers </h3> \r\n\t\t\t{showEntry()}\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}